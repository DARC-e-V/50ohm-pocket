name: 📦🚀 Build & deploy Android app
# based on https://github.com/orevial/flutter-ci-cd-demo/blob/main/.github/workflows/_deploy-android-app.yml no license provided
on:
  push:
    branches: '*'
  pull_request:
      branches: '*'

  workflow_dispatch:
jobs:
  deployAndroid:
    name: 🤖📦🚀 Build & deploy Android
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v2
      - name: ⚙️ Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: ⚙️ Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: 🔐 Retrieve base64 keystore and decode it to a file
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: echo $KEYSTORE_BASE64 | base64 --decode > "android/android-keystore.jks"
      - name: 📝🔐 Create keystore.properties file
        env:
          KEYSTORE_PROPERTIES_PATH: android/keystore.properties
        run: |
          echo 'StoreFile=./android-keystore.jks' > $KEYSTORE_PROPERTIES_PATH
          echo 'KeyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}' >> $KEYSTORE_PROPERTIES_PATH
          echo 'StorePassword=${{ secrets.STORE_PASSWORD }}' >> $KEYSTORE_PROPERTIES_PATH
          echo 'KeyPassword=${{ secrets.KEY_PASSWORD }}' >> $KEYSTORE_PROPERTIES_PATH
      - name: 🤖📦 Create Android appbundle release
        run: |
          mkdir debug-symbols
          flutter pub get
          flutter build appbundle \
            --release --debug
      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-release-artifact
          path: build/app/outputs/bundle/release/app-release.aab
      - name: 💬 Pick a random success catchphrase
        if: success()
        id: success_catchphrase
        run: |
          sentences=('🤩 AMAZING !' 'Woop woop 🎉' 'Oh wow 😮' '😎 Yeahhhh !' '📣 Amazing announcement !' '📢 Your attention please...' '👏 Great work !' '🍾 Champagne !' '🙌 High five !' '🥳 Time to celebrate !')
          arrayLength=${#sentences[@]}
          randomNumber=$(($RANDOM%$arrayLength))
          pickedSentence=${sentences[$randomNumber]}
          echo "picked_sentence=$pickedSentence" >> $GITHUB_OUTPUT
    

