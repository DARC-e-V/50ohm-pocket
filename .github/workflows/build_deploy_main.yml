name: build, sign and upload

#based on https://medium.com/@colonal/automating-flutter-builds-and-releases-with-github-actions-77ccf4a1ccdd
# Controls when the workflow will run
on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      #3 Install specified flutter version
      - uses: kuhnroyal/flutter-fvm-config-action/setup@v3

      #4 Install Dependencies
      - name: Install Dependencies
        run: fvm flutter pub get

      #5 Setup Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      #6 Building APK
      - name: Build APK
        run: fvm flutter build apk --release

      #7 Building App Bundle (aab)
      - name: Build appBundle
        run: fvm flutter build appbundle --release

      #8 Build iOS (ipa)
      - name: Build IPA
        run: fvm flutter build ios --release --no-codesign

      #9 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release.aab
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release.app
          path: /build/ios/iphoneos/Runner.app

      #10 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      #11 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      #12 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      #13 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios/iphoneos/Runner.app"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Upload artifact to Nextcloud
        env:
          USERNAME: ${{ secrets.NEXTCLOUD_USERNAME }}
          PASSWORD: ${{ secrets.NEXTCLOUD_PASSWORD }}
        run: |
          curl -u $USERNAME:$PASSWORD -X MKCOL https://files.darc.de/remote.php/dav/files/$USERNAME/app/50Ohm-APP/Builds/Android/${{ steps.extract_branch.outputs.branch }} || echo "Branch folder exists"
          curl -T build/app/outputs/flutter-apk/app-release.apk -u $USERNAME:$PASSWORD https://files.darc.de/remote.php/dav/files/$USERNAME/app/50Ohm-APP/Builds/Android/${{ steps.extract_branch.outputs.branch }}/
          curl -T build/app/outputs/bundle/release/app-release.aab -u $USERNAME:$PASSWORD https://files.darc.de/remote.php/dav/files/$USERNAME/app/50Ohm-APP/Builds/Android/${{ steps.extract_branch.outputs.branch }}/
          curl -T build/ios_build.tar.gz -u $USERNAME:$PASSWORD https://files.darc.de/remote.php/dav/files/$USERNAME/app/50Ohm-APP/Builds/Android/${{ steps.extract_branch.outputs.branch }}/
